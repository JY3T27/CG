#include <windows.h>
#include <stdlib.h>
#include <GL\gl.h>
#include <GL\glu.h>
#include <GL\glut.h>
#include <math.h>

#define SCREENWIDTH 800
#define SCREENHEIGHT 900
#define PI 3.1415926535897932384626433832795

void rectangle(float x, float y, float w, float h) {
	float w2 = w / 2;
	float h2 = h / 2;
	glBegin(GL_QUADS);
	glVertex2i(x - w2, y - h2);
	glVertex2i(x - w2, y + h2);
	glVertex2i(x + w2, y + h2);
	glVertex2i(x + w2, y - h2);
	glEnd();
}

void circle(float x, float y, float r) {
	float n = 50;
	float inc = (2 * PI) / n;
	glBegin(GL_POLYGON);
	for (float theta = 0.0; theta <= 2 * PI; theta += inc) {
		glVertex2d(r * cos(theta) + x, r * sin(theta) + y);
	}
	glEnd();
}

void halfCircle(float x, float y, float r) {
	float n = 50;
	float inc = PI / n;
	glBegin(GL_POLYGON);
	for (float theta = 0.0; theta <= PI; theta += inc) {
		glVertex2d(r * cos(theta) + x, r * sin(theta) + y);
	}
	glEnd();
}

void lines(float x1, float y1, float x2, float y2) {
	glBegin(GL_LINES);
	glVertex2d(x1, y1);
	glVertex2d(x2, y2);
	glEnd();
}

void triangle(float x, float y, float l) {
	glBegin(GL_TRIANGLES);
	glVertex2f(x - l/2, y);
	glVertex2f(x + l/2, y);
	glVertex2f(x, y - l);
	glEnd();
}

void guard(float x, float y) {
	glColor3ub(244, 182, 108);
	rectangle(x, y - 70.0, 180.0, 130.0);
	rectangle(x, y - 70.0, 220.0, 50.0);
	rectangle(x, y - 140.0, 80.0, 20.0);
	rectangle(x, y - 280.0, 200.0, 40.0);

	glColor3ub(64, 64, 64);
	halfCircle(x, y + 12.0, 100.0);
	rectangle(x - 90, y - 220.0, 30.0, 130.0);
	rectangle(x + 90, y - 220.0, 30.0, 130.0);

	glColor3ub(54, 54, 54);
	rectangle(x, y, 300.0, 40.0);

	glColor3ub(25, 25, 25);
	circle(x - 40.0, y - 60.0, 25.0);
	circle(x + 40.0, y - 60.0, 25.0);
	lines(x - 90.0, y - 45.0, x - 60.0, y - 60.0);
	lines(x + 60.0, y - 60.0, x + 90.0, y - 45.0);
	lines(x - 40.0, y - 60.0, x + 40.0, y - 60.0);

	glColor3ub(212, 23, 23);
	lines(x - 40.0, y - 105.0, x + 40.0, y - 105.0);

	glColor3ub(255, 255, 255);
	rectangle(x, y - 235.0, 120.0, 170.0);

	glColor3ub(54, 54, 54);
	rectangle(x - 60, y - 235.0, 40.0, 170.0);
	rectangle(x + 60, y - 235.0, 40.0, 170.0);

	glColor3ub(173, 0, 0);
	rectangle(x, y - 225.0, 30.0, 150.0);
}

void display() {
	glClear(GL_COLOR_BUFFER_BIT);
	glPointSize(10.0);
	glLineWidth(4.0);

	guard(SCREENWIDTH/2, 650);

	glFlush();
}

void initGL() {
	glClearColor(0.0, 0.0, 0.0, 0.0);
	glMatrixMode(GL_PROJECTION);
	glLoadIdentity();
	gluOrtho2D(0, SCREENWIDTH, 0, SCREENHEIGHT);
}

int main(int argc, char** argv) {
	glutInit(&argc, argv);
	glutInitWindowSize(SCREENWIDTH, SCREENHEIGHT);
	glutCreateWindow("Test Window");
	glutDisplayFunc(display);

	initGL();

	glutMainLoop();

}
